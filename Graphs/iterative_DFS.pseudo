Write the DFS algorithm without recursion. Each vertex also stores its
predecessor node in the DFS tree. Use the predecessor node for backtracking. The edges are
stored in the adjacency list.

DFS(G)
1. for each vertex u ∈ G.V
2.     u.color = WHITE
3.     u.π = NIL
4. time = 0
5. for each vertex u ∈ G.V
6.     if u.color == WHITE
7.         DFS-VISIT(G, u)

FIND_UNEXPLORED_VERTEX(G, u)
1. for each vertex v ∈ G.Adj[u]
2.     if v.color == WHITE
3.         return v
4. return NIL

DFS-VISIT(G, u)
1. while u != NIL
2.     time = time + 1
3.     u.d = time
4.     u.color = GRAY
5.     v = FIND_UNEXPLORED_VERTEX(G, u)
6.     if v == NIL
7.         time = time + 1
8.         u.f = time
9.         u.color = BLACK
10.        u = u.π
11.    else
12.        v.π = u
13.        u = v
